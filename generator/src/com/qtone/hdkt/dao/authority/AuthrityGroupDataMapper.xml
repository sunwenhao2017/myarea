<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qtone.hdkt.dao.authority.AuthrityGroupDataMapper" >
  <resultMap id="BaseResultMap" type="com.qtone.hdkt.model.authority.AuthrityGroupData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="data_id" property="dataId" jdbcType="INTEGER" />
    <result column="data_rule" property="dataRule" jdbcType="VARCHAR" />
    <result column="is_query" property="isQuery" jdbcType="INTEGER" />
    <result column="is_edit" property="isEdit" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, group_id, data_id, data_rule, is_query, is_edit, create_time, update_time, delete_time, 
    is_deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qtone.hdkt.model.authority.AuthrityGroupDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from authority_group_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0 and limitEnd != null and limitEnd>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from authority_group_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from authority_group_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qtone.hdkt.model.authority.AuthrityGroupDataExample" >
    delete from authority_group_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qtone.hdkt.model.authority.AuthrityGroupData" >
    insert into authority_group_data (id, group_id, data_id, 
      data_rule, is_query, is_edit, 
      create_time, update_time, delete_time, 
      is_deleted)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{dataId,jdbcType=INTEGER}, 
      #{dataRule,jdbcType=VARCHAR}, #{isQuery,jdbcType=INTEGER}, #{isEdit,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qtone.hdkt.model.authority.AuthrityGroupData" >
    insert into authority_group_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="dataId != null" >
        data_id,
      </if>
      <if test="dataRule != null" >
        data_rule,
      </if>
      <if test="isQuery != null" >
        is_query,
      </if>
      <if test="isEdit != null" >
        is_edit,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="dataId != null" >
        #{dataId,jdbcType=INTEGER},
      </if>
      <if test="dataRule != null" >
        #{dataRule,jdbcType=VARCHAR},
      </if>
      <if test="isQuery != null" >
        #{isQuery,jdbcType=INTEGER},
      </if>
      <if test="isEdit != null" >
        #{isEdit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qtone.hdkt.model.authority.AuthrityGroupDataExample" resultType="java.lang.Integer" >
    select count(*) from authority_group_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update authority_group_data
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.dataId != null" >
        data_id = #{record.dataId,jdbcType=INTEGER},
      </if>
      <if test="record.dataRule != null" >
        data_rule = #{record.dataRule,jdbcType=VARCHAR},
      </if>
      <if test="record.isQuery != null" >
        is_query = #{record.isQuery,jdbcType=INTEGER},
      </if>
      <if test="record.isEdit != null" >
        is_edit = #{record.isEdit,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteTime != null" >
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update authority_group_data
    set id = #{record.id,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      data_id = #{record.dataId,jdbcType=INTEGER},
      data_rule = #{record.dataRule,jdbcType=VARCHAR},
      is_query = #{record.isQuery,jdbcType=INTEGER},
      is_edit = #{record.isEdit,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qtone.hdkt.model.authority.AuthrityGroupData" >
    update authority_group_data
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="dataId != null" >
        data_id = #{dataId,jdbcType=INTEGER},
      </if>
      <if test="dataRule != null" >
        data_rule = #{dataRule,jdbcType=VARCHAR},
      </if>
      <if test="isQuery != null" >
        is_query = #{isQuery,jdbcType=INTEGER},
      </if>
      <if test="isEdit != null" >
        is_edit = #{isEdit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qtone.hdkt.model.authority.AuthrityGroupData" >
    update authority_group_data
    set group_id = #{groupId,jdbcType=INTEGER},
      data_id = #{dataId,jdbcType=INTEGER},
      data_rule = #{dataRule,jdbcType=VARCHAR},
      is_query = #{isQuery,jdbcType=INTEGER},
      is_edit = #{isEdit,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>